{
	// Place your atcoder-workspace workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Eratosthenes' sieve": {
        "scope": "rust",
		"prefix": "makesieve",
		"body":[
            "let max_n = 1000000;",
            "let mut is_prime = vec![true;max_n+1];",
            "let mut primes = vec![2];",
            "for i in 2..=500000 {is_prime[i<<1] = false;}",
            "let mut _i = 3;",
            "while _i <= 1000 {",
                "\tif is_prime[_i] {",
                    "\t\tprimes.push(_i);",
                    "\t\tlet twoi = _i<<1;",
                    "\t\tlet mut j = _i*_i;",
                    "\t\twhile j <= max_n {",
                        "\t\t\tis_prime[j] = false;",
                        "\t\t\tj += twoi;",
                    "\t\t}",
                "\t}",
                "\t_i += 2;",
            "}",
            "while _i <= max_n {",
                "\tif is_prime[_i] {primes.push(_i);}",
                "\t_i += 2;",
            "}",
        ],
	},

}